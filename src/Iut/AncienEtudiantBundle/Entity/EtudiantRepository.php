<?php

namespace Iut\AncienEtudiantBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EtudiantRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EtudiantRepository extends EntityRepository
{
    
    public function  getListe(){
        $query = $this->createQueryBuilder('e')
                      ->leftJoin('e.experiences', 'ex')
                      ->addSelect('ex')
                      ->leftJoin('ex.poste', 'p')
                      ->addSelect('p')
                      ->leftJoin('e.formations', 'form')
                      ->addSelect('form')
                      ->leftJoin('e.promotion', 'promo')
                      ->addSelect('promo')
                      ->orderBy('ex.dateDebut','DESC');
         return $query->getQuery()
                      ->getArrayResult();
    }
    
    public function  getById($id){
        $query = $this->createQueryBuilder('e')
                      ->leftJoin('e.experiences', 'ex')
                      ->addSelect('ex')
                      ->leftJoin('e.formations', 'form')
                      ->addSelect('form')
                      ->where('e.id = :id')
                      ->setParameter('id', $id);
         return $query->getQuery()
                      ->getResult();
    }
    
     public function  getListeEnvoiEmail(){
         $dql='SELECT e  FROM IutAncienEtudiantBundle:Etudiant e WHERE DATEDIFF(CURRENT_DATE( ) , e.dateModif )  >= 365';
          $query = $this->_em->createQuery($dql);
                      
         return $query->getResult();
    }
    
     
    public function getListeByX($poste,$entreprise,$promo){
        $qb = $this->createQueryBuilder('e')
                    ->leftJoin('e.promotion', 'promo')
                    ->leftJoin('e.experiences', 'ex')
                    ->leftJoin('ex.poste','p')
                    ->where('1=1');
                
                    if ($entreprise !='') $qb->andWhere('ex.entreprise  = :entreprise');
                    if ($poste !='') $qb ->andWhere('p.id  = :posteid');
                    if ($promo !='') $qb ->andWhere('promo.id  = :promoid');
                    if ($poste !='') $qb->setParameter('posteid', $poste);
                    if ($entreprise !='') $qb ->setParameter('entreprise', $entreprise);
                    if ($promo !='') $qb->setParameter('promoid', $promo);


        return $qb->getQuery()
                  ->getResult();
    }
    
    public function getByEmail($email){
        
        $qb = $this->createQueryBuilder('e')
                
                    ->leftJoin('e.promotion', 'promo')
                    ->leftJoin('e.experiences', 'ex')
                    ->leftJoin('ex.poste','p')
                    ->where('e.email= :email');
                    $qb->setParameter('email', $email);
                   

         return $qb->getQuery()
                  ->getResult();
    }
}
